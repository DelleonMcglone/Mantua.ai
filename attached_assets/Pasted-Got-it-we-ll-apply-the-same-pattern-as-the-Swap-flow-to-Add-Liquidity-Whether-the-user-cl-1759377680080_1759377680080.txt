Got it ‚úÖ ‚Äî we‚Äôll apply the **same pattern as the Swap flow** to Add Liquidity. Whether the user **clicks the + button ‚Üí Add Liquidity** or **types "Add Liquidity"**, the Liquidity component should display automatically. If they specify tokens (e.g., `"Add Liquidity ETH/USDC"`) then the modal should prefill.

Here‚Äôs the **Replit prompt** to cover this end-to-end:

---

### üü£ Replit Prompt: **Add Liquidity Component Triggering & Prefill Behavior**

Update chatbot behavior so the **Add Liquidity component** displays consistently when triggered by button or text input.

---

**1. Trigger Conditions**

* If user clicks **+ ‚Üí Add Liquidity** ‚Üí

  * Display info text:

    ```
    Provide liquidity into supported pools to earn fees and participate in yield farming.

    ‚Ä¢ Add liquidity to ETH/USDC  
    ‚Ä¢ Provide stablecoin liquidity into USDC/EURC pools  
    ‚Ä¢ Use advanced hooks for custom strategies  

    Available on Base Sepolia testnet with full mainnet feature parity.
    ```
  * Then immediately render the **Add Liquidity component**.

* If user types **"Add Liquidity"** ‚Üí

  * Skip text response.
  * Immediately **render the Add Liquidity component**.

* If user types **"Add Liquidity ETH/USDC"** ‚Üí

  * Render Add Liquidity component with:

    * Token 1 = ETH preselected
    * Token 2 = USDC preselected

* If user types **"Add Liquidity ETH/USDC using my custom hook"** ‚Üí

  * Render Add Liquidity component with:

    * ETH/USDC preselected
    * Hook dropdown set to **Custom Hook**
    * Custom hook field expanded and ready for input

---

**2. Behavior**

* Liquidity component should always render inline in chat (scrollable feed).
* Once Add Liquidity is submitted:

  * Show **transaction processing state** (‚ÄúAdding liquidity‚Ä¶‚Äù).
  * On success ‚Üí show **confirmation + transaction summary**.
  * Auto-update **User Activity** + **Agent Activity** (if agent-driven).

---

**3. Auto-Updates**

* After successful add liquidity:

  * Push new row into **User Activity table**.
  * Update portfolio summary and chart.
  * If action was triggered by an agent ‚Üí also update **Agent Activity table**.
* Also inject a chat message:

  * `"Liquidity added: 1 ETH + 3000 USDC to ETH/USDC pool"`
  * With link: **‚ÄúView in User Activity‚Äù**

---

**4. Guard Logic**

* Ensure only **one Liquidity component** renders per trigger.
* Use `activeComponent === "liquidity"` state to avoid duplicates.

---

‚ö° Do you also want me to extend this so the **"View Available Pools" button** in the suggestion flow (screenshot 1) also launches the Add Liquidity flow directly if the user selects a pool?
