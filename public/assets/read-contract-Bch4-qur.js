import{e as u,aR as y,f as A}from"./index-tILzMOs2.js";import{e as w,i as g,p as f,a as P}from"./utils-DmlJ-9bG.js";import{d as k}from"./decodeAbiParameters-CNGCbnoP.js";function x(n){return Object.fromEntries(Object.entries(n).map(([t,e])=>[t,{balance:e.balance?u(e.balance):void 0,code:e.code,nonce:e.nonce?u(e.nonce):void 0,state:e.state,stateDiff:e.stateDiff}]))}async function O(n,t){const{blockNumber:e,blockTag:a,...s}=t,c=(e?u(e):void 0)||a||"latest";return await n({method:"eth_call",params:t.stateOverrides?[s,c,x(t.stateOverrides)]:[s,c]})}async function E(n){const{contract:t,method:e,params:a}=n,s=async()=>{var l,m;if(Array.isArray(e))return e;if(g(e))return f(e);if(typeof e=="function")return f(await e(t));if(typeof e=="string"&&e.startsWith("function ")){const o=P(e);if(o.type==="function")return f(o);throw new Error('"method" passed is not of type "function"')}if(t.abi&&((l=t.abi)==null?void 0:l.length)>0){const o=(m=t.abi)==null?void 0:m.find(b=>b.type==="function"&&b.name===e);if(o)return f(o)}throw new Error(`Could not resolve method "${e}".`)},[r,c]=await Promise.all([s(),typeof a=="function"?a():a]);let d;r[1].length===0?d=r[0]:d=r[0]+w(r[1],c).slice(2);const p=y({chain:t.chain,client:t.client}),h=await O(p,{data:d,from:n.from?A(n.from):void 0,to:t.address}),i=k(r[2],h);return Array.isArray(i)&&i.length===1?i[0]:i}export{E as readContract};
